"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const analytics_service_base_1 = require("../common/services/analytics-service-base");
const decorators_1 = require("../common/decorators");
class AnalyticsService extends analytics_service_base_1.AnalyticsServiceBase {
    constructor($logger, $options, $staticConfig, $prompter, $userSettingsService, $analyticsSettingsService, $progressIndicator, $osInfo) {
        super($logger, $options, $staticConfig, $prompter, $userSettingsService, $analyticsSettingsService, $progressIndicator, $osInfo);
        this.$logger = $logger;
        this.$options = $options;
    }
    startEqatecMonitor(projectApiKey) {
        return __awaiter(this, void 0, void 0, function* () {
            if ((yield this.isEnabled(this.$staticConfig.TRACK_FEATURE_USAGE_SETTING_NAME)) || (yield this.isEnabled(this.$staticConfig.ERROR_REPORT_SETTING_NAME))) {
                yield this.restartEqatecMonitor(projectApiKey);
            }
        });
    }
    checkConsentCore(trackFeatureUsage) {
        const _super = name => super[name];
        return __awaiter(this, void 0, void 0, function* () {
            yield this.restartEqatecMonitor(AnalyticsService.ANALYTICS_FEATURE_USAGE_TRACKING_API_KEY);
            yield _super("checkConsentCore").call(this, trackFeatureUsage);
            this.tryStopEqatecMonitor();
        });
    }
}
AnalyticsService.ANALYTICS_FEATURE_USAGE_TRACKING_API_KEY = "9912cff308334c6d9ad9c33f76a983e3";
__decorate([
    decorators_1.exported("analyticsService")
], AnalyticsService.prototype, "startEqatecMonitor", null);
exports.AnalyticsService = AnalyticsService;
$injector.register("analyticsService", AnalyticsService);
